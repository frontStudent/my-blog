"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[8904],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(t),m=a,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||o;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[l]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},500:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={},s=void 0,i={unversionedId:"snippets/\u624b\u5199\u5c0f\u529f\u80fd",id:"snippets/\u624b\u5199\u5c0f\u529f\u80fd",title:"\u624b\u5199\u5c0f\u529f\u80fd",description:"\u6570\u636e\u6dfb\u52a0\u5343\u5206\u4f4d/\u4e0a\u5347\u4e0b\u964d\u9ad8\u4eae\u5904\u7406",source:"@site/docs/snippets/\u624b\u5199\u5c0f\u529f\u80fd.md",sourceDirName:"snippets",slug:"/snippets/\u624b\u5199\u5c0f\u529f\u80fd",permalink:"/my-blog/docs/snippets/\u624b\u5199\u5c0f\u529f\u80fd",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/snippets/\u624b\u5199\u5c0f\u529f\u80fd.md",tags:[],version:"current",frontMatter:{},sidebar:"snippetSidebar",previous:{title:"vscode\u4ee3\u7801\u7247\u6bb5\u5206\u7c7b",permalink:"/my-blog/docs/snippets/vscode\u4ee3\u7801\u7247\u6bb5\u5206\u7c7b"}},c={},p=[{value:"\u6570\u636e\u6dfb\u52a0\u5343\u5206\u4f4d/\u4e0a\u5347\u4e0b\u964d\u9ad8\u4eae\u5904\u7406",id:"\u6570\u636e\u6dfb\u52a0\u5343\u5206\u4f4d\u4e0a\u5347\u4e0b\u964d\u9ad8\u4eae\u5904\u7406",level:3}],u={toc:p},l="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u6570\u636e\u6dfb\u52a0\u5343\u5206\u4f4d\u4e0a\u5347\u4e0b\u964d\u9ad8\u4eae\u5904\u7406"},"\u6570\u636e\u6dfb\u52a0\u5343\u5206\u4f4d/\u4e0a\u5347\u4e0b\u964d\u9ad8\u4eae\u5904\u7406"),(0,a.kt)("p",null,"\u793a\u4f8b\uff1a3000% => +3,000% (\u7eff\u8272)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"/**\n * \u6570\u5b57\u5343\u5206\u4f4d/\u5c0f\u6570\u4f4d\u8865\u5145\u4e24\u4f4d\n * @param {Number} number\n * @param {Boolean} decimalThousands \u5c0f\u6570\u662f\u5426\u9700\u8981\u5343\u5206\u4f4d\n */\nconst\u3000_thousands = (number, decimalThousands) => {\n  // \u5c0f\u6570\u4f4d\u4e5f\u8981\u5343\u5206\u4f4d\n  if (decimalThousands) {\n    return String(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n  // \u5c0f\u6570\u4f4d\u4e0d\u8981\u5343\u5206\u4f4d\n  let parts = String(number).split('.')\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  return parts.join('.')\n}\n\n/**\n * \u4e0a\u5347\u4e0b\u964d\u7684\u6570\u636e\u5206\u522b\u7528\u4e0d\u540c\u989c\u8272\u663e\u793a\n * @param {String} text\n * @param {String} highlight \u662f\u5426\u9700\u8981\u9ad8\u4eae 0\u4e0d\u9700\u8981 1\u9700\u8981\n * @param {String} thousands \u6587\u672c\u662f\u5426\u9700\u8981\u5343\u5206\u4f4d 0\u4e0d\u9700\u8981 1\u9700\u8981\n */\nconst renderHighlightData = (text, highlight, thousands) => {\n    const renderThousands = (text) => (thousands === '1' ? _thousands(text || '') : text)\n\n    // \u4e0d\u9700\u8981\u6539\u8272\u5c31\u76f4\u63a5\u5224\u65ad\u8981\u4e0d\u8981\u5343\u5206\u4f4d\u5373\u53ef\n    if (highlight !== '1') return renderThousands(text)\n\n    const regex = /(-?\\d+(\\.\\d+)?)(%?)/\n    const match = text?.match(regex)\n    if (match) {\n      const number = Number(match[1])\n      const suffix = match[3];\n      return number > 0 ? (\n        <UpSpan>{`+${renderThousands(number)}${suffix}`}</UpSpan>\n      ) : number < 0 ? (\n        <DownSpan>{`${renderThousands(number)}${suffix}`}</DownSpan>\n      ) : (\n        `${number}${suffix}`\n      )\n    }\n    return renderThousands(text)\n}\n")))}d.isMDXComponent=!0}}]);